<?php
/**
 * This class was automatically generated by GraphQL Schema generator
 */

namespace ApiBundle\GraphQL;

use Youshido\GraphQL\Schema\AbstractSchema;
use Youshido\GraphQL\Config\Schema\SchemaConfig;
use Youshido\GraphQL\Type\Scalar\StringType;

class Schema extends AbstractSchema
{
    public function build(SchemaConfig $config)
    {
        $config->getQuery()->addFields([
            'hello' => [
                'type'    => new StringType(),
                'args'    => [
                    'name' => [
                        'type' => new StringType(),
                        'default' => 'world' //ne reconnait pas l'argument pourquoi???
                    ]
                ],
                'resolve' => function ($context, $args) {
                    return 'Hello ' . $args['name'];
                }
            ]
        ]);
    }

}

//const Query = new GraphQLObjectType({
//    name: 'BlogSchema',
//  description: "Root of the Blog Schema",
//  fields: () => ({
//    echo: {
//        type: GraphQLString,
//      description: "Echo what you enter",
//      args: {
//            message: {type: GraphQLString}
//        },
//      resolve: function(root, {message}) {
//            return `recieved ${message}`;
//        }
//    }
//  })
//});